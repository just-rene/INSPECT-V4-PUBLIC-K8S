spring.application.name=inspect-main-collecting-processing
server.port=9001
spring.profiles.active=${PROFILE}


#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.orm.jdbc.bind=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#hibernate.show_sql=true


spring.data.mongodb.auto-index-creation=true
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
#kafka event config #stock-market-subscription;;
spring.cloud.function.definition=topic-publisher;sentiment-day-accumulated-publisher;user-events
spring.cloud.stream.bindings.user-events-in-0.destination=user-events

#spring.cloud.stream.bindings.topic-publisher-out-0.binder=kafka1
#spring.cloud.stream.bindings.sentiment-day-accumulated-publisher-out-0.binder=kafka2


spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.cloud.stream.kafka.binder.minPartitionCount=10

spring.cloud.stream.poller.fixed-delay=1000

spring.mvc.async.request-timeout=-1
logging.level.org.mongodb=ERROR

spring.datasource.url=jdbc:mysql://localhost:3306/mega

#available services
services.stock-market-data-collector=stock-market-data-collector
services.stock-market-data-processing=stock-market-data-processing

#Local MongoDB config
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.database=mongo_mega
spring.data.mongodb.port=27017
#spring.data.mongodb.host=localhost
spring.data.mongodb.host=${MONGO_DB_HOST}

development=true

huggingface.bearer_token=${HUGGINGFACE_TOKEN}
huggingface.request.multilabel=true
huggingface.request.sentiment=true
huggingface.request.ner=true

scrap.on=true
topic_collector.on=true

#login to this application
cred.user=${CRED_USER}
cred.pass=${CRED_PASS}

#frontend access allowed, example: CORS_PATTERN=http://localhost:8080
cors.pattern=${CORS_PATTERN}
